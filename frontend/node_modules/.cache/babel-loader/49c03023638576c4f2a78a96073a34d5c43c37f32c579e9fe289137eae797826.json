{"ast":null,"code":"import axios from 'axios';\nimport { getToken, removeToken } from '../utils/auth';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Response interceptor\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    if (error.response.data.message === 'Token expired') {\n      try {\n        const response = await api.post('/api/token/refresh/', {\n          refresh: localStorage.getItem('refresh_token')\n        });\n        const {\n          access\n        } = response.data;\n        originalRequest.headers.Authorization = `Bearer ${access}`;\n        return api(originalRequest);\n      } catch (refreshError) {\n        removeToken();\n        window.location.href = '/login';\n        return Promise.reject(refreshError);\n      }\n    }\n    removeToken();\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth endpoints - Export these directly\nexport const login = async credentials => {\n  try {\n    // First, get the JWT tokens\n    const tokenResponse = await api.post('/api/token/', {\n      username: credentials.username,\n      password: credentials.password\n    });\n    console.log('Token response:', tokenResponse);\n    const {\n      access,\n      refresh\n    } = tokenResponse.data;\n    if (!access) {\n      throw new Error('No access token received');\n    }\n\n    // Store refresh token\n    if (refresh) {\n      localStorage.setItem('refresh_token', refresh);\n    }\n\n    // Get user data using the access token\n    const userResponse = await api.get('/api/users/me/', {\n      headers: {\n        Authorization: `Bearer ${access}`\n      }\n    });\n    return {\n      data: {\n        token: token,\n        user: response.data.user || {}\n      }\n    };\n  } catch (error) {\n    var _error$response2, _error$response3;\n    console.error('Login error details:', {\n      status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n      data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data,\n      message: error.message\n    });\n    throw error;\n  }\n};\nexport const register = userData => api.post('/api/auth/register', userData);\nexport const logout = () => api.post('/api/auth/logout');\nexport const getMe = () => api.get('/api/users/me');\nexport const refreshToken = () => api.post('/api/auth/refresh');\nexport const forgotPassword = email => api.post('/api/auth/forgot-password', {\n  email\n});\nexport const resetPassword = (token, password) => api.post('/api/auth/reset-password', {\n  token,\n  password\n});\n\n// Also export as part of authService object\nexport const authService = {\n  login,\n  register,\n  logout,\n  getMe,\n  refreshToken,\n  forgotPassword,\n  resetPassword\n};\nexport default api;","map":{"version":3,"names":["axios","getToken","removeToken","api","create","baseURL","process","env","REACT_APP_API_URL","headers","timeout","interceptors","request","use","config","token","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","data","message","post","refresh","localStorage","getItem","access","refreshError","window","location","href","login","credentials","tokenResponse","username","password","console","log","Error","setItem","userResponse","get","user","_error$response2","_error$response3","register","userData","logout","getMe","refreshToken","forgotPassword","email","resetPassword","authService"],"sources":["C:/Users/Admin/ims-proj/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { getToken, removeToken } from '../utils/auth';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 10000,\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  (config) => {\n    const token = getToken();\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      \n      if (error.response.data.message === 'Token expired') {\n        try {\n          const response = await api.post('/api/token/refresh/', {\n            refresh: localStorage.getItem('refresh_token')\n          });\n          const { access } = response.data;\n          originalRequest.headers.Authorization = `Bearer ${access}`;\n          return api(originalRequest);\n        } catch (refreshError) {\n          removeToken();\n          window.location.href = '/login';\n          return Promise.reject(refreshError);\n        }\n      }\n      \n      removeToken();\n      window.location.href = '/login';\n    }\n\n    return Promise.reject(error);\n  }\n);\n\n// Auth endpoints - Export these directly\nexport const login = async (credentials) => {\n  try {\n    // First, get the JWT tokens\n    const tokenResponse = await api.post('/api/token/', {\n      username: credentials.username,\n      password: credentials.password,\n    });\n    \n    console.log('Token response:', tokenResponse);\n    \n    const { access, refresh } = tokenResponse.data;\n    \n    if (!access) {\n      throw new Error('No access token received');\n    }\n    \n    // Store refresh token\n    if (refresh) {\n      localStorage.setItem('refresh_token', refresh);\n    }\n\n    // Get user data using the access token\n    const userResponse = await api.get('/api/users/me/', {\n      headers: { Authorization: `Bearer ${access}` }\n    });\n    \n    return {\n      data: {\n        token: token,\n        user: response.data.user || {}\n      }\n    };\n  } catch (error) {\n    console.error('Login error details:', {\n      status: error.response?.status,\n      data: error.response?.data,\n      message: error.message\n    });\n    throw error;\n  }\n};\nexport const register = (userData) => api.post('/api/auth/register', userData);\nexport const logout = () => api.post('/api/auth/logout');\nexport const getMe = () => api.get('/api/users/me');\nexport const refreshToken = () => api.post('/api/auth/refresh');\nexport const forgotPassword = (email) => api.post('/api/auth/forgot-password', { email });\nexport const resetPassword = (token, password) => \n  api.post('/api/auth/reset-password', { token, password });\n\n// Also export as part of authService object\nexport const authService = {\n  login,\n  register,\n  logout,\n  getMe,\n  refreshToken,\n  forgotPassword,\n  resetPassword,\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}