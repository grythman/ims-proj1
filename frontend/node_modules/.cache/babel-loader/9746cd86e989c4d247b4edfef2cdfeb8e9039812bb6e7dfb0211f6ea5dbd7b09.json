{"ast":null,"code":"import api from './api';\nconst ENDPOINTS = {\n  PROFILE: '/api/users/me',\n  DASHBOARD: '/api/dashboard/teacher',\n  REPORTS: '/api/reports/teacher',\n  EVALUATIONS: '/api/evaluations/teacher',\n  STUDENTS: '/api/students/teacher'\n};\n\n// Dashboard and analytics\nexport const dashboardService = {\n  getOverview: () => api.get(ENDPOINTS.DASHBOARD),\n  getStats: () => api.get(`${ENDPOINTS.DASHBOARD}/stats`)\n};\n\n// Report management\nexport const reportService = {\n  getPendingReports: () => api.get(`${ENDPOINTS.REPORTS}/pending`),\n  getReportById: reportId => api.get(`${ENDPOINTS.REPORTS}/${reportId}`),\n  submitEvaluation: (reportId, evaluationData) => api.post(`${ENDPOINTS.REPORTS}/${reportId}/evaluate`, evaluationData),\n  downloadReport: reportId => api.get(`${ENDPOINTS.REPORTS}/${reportId}/download`, {\n    responseType: 'blob'\n  })\n};\n\n// Student management\nexport const studentService = {\n  getAllStudents: () => api.get(ENDPOINTS.STUDENTS),\n  getStudentDetails: studentId => api.get(`${ENDPOINTS.STUDENTS}/${studentId}`),\n  getStudentProgress: studentId => api.get(`${ENDPOINTS.STUDENTS}/${studentId}/progress`),\n  getStudentReports: studentId => api.get(`${ENDPOINTS.STUDENTS}/${studentId}/reports`),\n  getStudentActivities: studentId => api.get(`${ENDPOINTS.STUDENTS}/${studentId}/activities`),\n  getStudentEvaluations: studentId => api.get(`${ENDPOINTS.STUDENTS}/${studentId}/evaluations`),\n  updateStudentStatus: (studentId, status) => api.put(`${ENDPOINTS.STUDENTS}/${studentId}/status`, {\n    status\n  }),\n  addProgressNote: (studentId, note) => api.post(`${ENDPOINTS.STUDENTS}/${studentId}/notes`, {\n    note\n  })\n};\n\n// Evaluation management\nexport const evaluationService = {\n  submitEvaluation: (studentId, evaluationData) => api.post(`${ENDPOINTS.EVALUATIONS}/${studentId}`, evaluationData),\n  getEvaluationHistory: studentId => api.get(`${ENDPOINTS.EVALUATIONS}/${studentId}/history`),\n  updateEvaluation: (evaluationId, data) => api.put(`${ENDPOINTS.EVALUATIONS}/${evaluationId}`, data),\n  getMentorEvaluations: () => api.get(`${ENDPOINTS.EVALUATIONS}/mentor/all`),\n  getMentorEvaluationById: evaluationId => api.get(`${ENDPOINTS.EVALUATIONS}/mentor/${evaluationId}`),\n  addComment: (evaluationId, data) => api.post(`${ENDPOINTS.EVALUATIONS}/mentor/${evaluationId}/comment`, data),\n  updateEvaluationStatus: (evaluationId, status) => api.put(`${ENDPOINTS.EVALUATIONS}/mentor/${evaluationId}/status`, {\n    status\n  }),\n  getEvaluationStats: () => api.get(`${ENDPOINTS.EVALUATIONS}/mentor/stats`),\n  getStudentsForFinalEvaluation: () => api.get(`${ENDPOINTS.EVALUATIONS}/final/students`),\n  submitFinalEvaluation: (studentId, evaluationData) => api.post(`${ENDPOINTS.EVALUATIONS}/final/${studentId}`, evaluationData),\n  getFinalEvaluation: studentId => api.get(`${ENDPOINTS.EVALUATIONS}/final/${studentId}`),\n  updateFinalEvaluation: (studentId, evaluationData) => api.put(`${ENDPOINTS.EVALUATIONS}/final/${studentId}`, evaluationData),\n  downloadFinalEvaluation: studentId => api.get(`${ENDPOINTS.EVALUATIONS}/final/${studentId}/download`, {\n    responseType: 'blob'\n  }),\n  signFinalEvaluation: (studentId, signature) => api.post(`${ENDPOINTS.EVALUATIONS}/final/${studentId}/sign`, {\n    signature\n  })\n};\n\n// Error handling wrapper\nconst withErrorHandling = apiCall => async (...args) => {\n  try {\n    const response = await apiCall(...args);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Teacher API Error:', error);\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error;\n  }\n};\n\n// Export wrapped services\nexport default {\n  dashboard: Object.keys(dashboardService).reduce((acc, key) => ({\n    ...acc,\n    [key]: withErrorHandling(dashboardService[key])\n  }), {}),\n  reports: Object.keys(reportService).reduce((acc, key) => ({\n    ...acc,\n    [key]: withErrorHandling(reportService[key])\n  }), {}),\n  students: Object.keys(studentService).reduce((acc, key) => ({\n    ...acc,\n    [key]: withErrorHandling(studentService[key])\n  }), {}),\n  evaluations: Object.keys(evaluationService).reduce((acc, key) => ({\n    ...acc,\n    [key]: withErrorHandling(evaluationService[key])\n  }), {})\n};","map":{"version":3,"names":["api","ENDPOINTS","PROFILE","DASHBOARD","REPORTS","EVALUATIONS","STUDENTS","dashboardService","getOverview","get","getStats","reportService","getPendingReports","getReportById","reportId","submitEvaluation","evaluationData","post","downloadReport","responseType","studentService","getAllStudents","getStudentDetails","studentId","getStudentProgress","getStudentReports","getStudentActivities","getStudentEvaluations","updateStudentStatus","status","put","addProgressNote","note","evaluationService","getEvaluationHistory","updateEvaluation","evaluationId","data","getMentorEvaluations","getMentorEvaluationById","addComment","updateEvaluationStatus","getEvaluationStats","getStudentsForFinalEvaluation","submitFinalEvaluation","getFinalEvaluation","updateFinalEvaluation","downloadFinalEvaluation","signFinalEvaluation","signature","withErrorHandling","apiCall","args","response","error","_error$response","console","dashboard","Object","keys","reduce","acc","key","reports","students","evaluations"],"sources":["C:/Users/Admin/ims-proj/frontend/src/services/teacherApi.js"],"sourcesContent":["import api from './api';\n\nconst ENDPOINTS = {\n  PROFILE: '/api/users/me',\n  DASHBOARD: '/api/dashboard/teacher',\n  REPORTS: '/api/reports/teacher',\n  EVALUATIONS: '/api/evaluations/teacher',\n  STUDENTS: '/api/students/teacher',\n};\n\n// Dashboard and analytics\nexport const dashboardService = {\n  getOverview: () => api.get(ENDPOINTS.DASHBOARD),\n  getStats: () => api.get(`${ENDPOINTS.DASHBOARD}/stats`),\n};\n\n// Report management\nexport const reportService = {\n  getPendingReports: () => api.get(`${ENDPOINTS.REPORTS}/pending`),\n  getReportById: (reportId) => api.get(`${ENDPOINTS.REPORTS}/${reportId}`),\n  submitEvaluation: (reportId, evaluationData) => \n    api.post(`${ENDPOINTS.REPORTS}/${reportId}/evaluate`, evaluationData),\n  downloadReport: (reportId) => \n    api.get(`${ENDPOINTS.REPORTS}/${reportId}/download`, { responseType: 'blob' }),\n};\n\n// Student management\nexport const studentService = {\n  getAllStudents: () => api.get(ENDPOINTS.STUDENTS),\n  getStudentDetails: (studentId) => api.get(`${ENDPOINTS.STUDENTS}/${studentId}`),\n  getStudentProgress: (studentId) => api.get(`${ENDPOINTS.STUDENTS}/${studentId}/progress`),\n  getStudentReports: (studentId) => api.get(`${ENDPOINTS.STUDENTS}/${studentId}/reports`),\n  getStudentActivities: (studentId) => api.get(`${ENDPOINTS.STUDENTS}/${studentId}/activities`),\n  getStudentEvaluations: (studentId) => api.get(`${ENDPOINTS.STUDENTS}/${studentId}/evaluations`),\n  updateStudentStatus: (studentId, status) => \n    api.put(`${ENDPOINTS.STUDENTS}/${studentId}/status`, { status }),\n  addProgressNote: (studentId, note) => \n    api.post(`${ENDPOINTS.STUDENTS}/${studentId}/notes`, { note }),\n};\n\n// Evaluation management\nexport const evaluationService = {\n  submitEvaluation: (studentId, evaluationData) => \n    api.post(`${ENDPOINTS.EVALUATIONS}/${studentId}`, evaluationData),\n  getEvaluationHistory: (studentId) => \n    api.get(`${ENDPOINTS.EVALUATIONS}/${studentId}/history`),\n  updateEvaluation: (evaluationId, data) => \n    api.put(`${ENDPOINTS.EVALUATIONS}/${evaluationId}`, data),\n  getMentorEvaluations: () => api.get(`${ENDPOINTS.EVALUATIONS}/mentor/all`),\n  getMentorEvaluationById: (evaluationId) => \n    api.get(`${ENDPOINTS.EVALUATIONS}/mentor/${evaluationId}`),\n  addComment: (evaluationId, data) => \n    api.post(`${ENDPOINTS.EVALUATIONS}/mentor/${evaluationId}/comment`, data),\n  updateEvaluationStatus: (evaluationId, status) => \n    api.put(`${ENDPOINTS.EVALUATIONS}/mentor/${evaluationId}/status`, { status }),\n  getEvaluationStats: () => api.get(`${ENDPOINTS.EVALUATIONS}/mentor/stats`),\n  getStudentsForFinalEvaluation: () => \n    api.get(`${ENDPOINTS.EVALUATIONS}/final/students`),\n  submitFinalEvaluation: (studentId, evaluationData) => \n    api.post(`${ENDPOINTS.EVALUATIONS}/final/${studentId}`, evaluationData),\n  getFinalEvaluation: (studentId) => \n    api.get(`${ENDPOINTS.EVALUATIONS}/final/${studentId}`),\n  updateFinalEvaluation: (studentId, evaluationData) => \n    api.put(`${ENDPOINTS.EVALUATIONS}/final/${studentId}`, evaluationData),\n  downloadFinalEvaluation: (studentId) => \n    api.get(`${ENDPOINTS.EVALUATIONS}/final/${studentId}/download`, {\n      responseType: 'blob'\n    }),\n  signFinalEvaluation: (studentId, signature) => \n    api.post(`${ENDPOINTS.EVALUATIONS}/final/${studentId}/sign`, { signature }),\n};\n\n// Error handling wrapper\nconst withErrorHandling = (apiCall) => async (...args) => {\n  try {\n    const response = await apiCall(...args);\n    return response.data;\n  } catch (error) {\n    console.error('Teacher API Error:', error);\n    throw error.response?.data || error;\n  }\n};\n\n// Export wrapped services\nexport default {\n  dashboard: Object.keys(dashboardService).reduce((acc, key) => ({\n    ...acc,\n    [key]: withErrorHandling(dashboardService[key])\n  }), {}),\n  reports: Object.keys(reportService).reduce((acc, key) => ({\n    ...acc,\n    [key]: withErrorHandling(reportService[key])\n  }), {}),\n  students: Object.keys(studentService).reduce((acc, key) => ({\n    ...acc,\n    [key]: withErrorHandling(studentService[key])\n  }), {}),\n  evaluations: Object.keys(evaluationService).reduce((acc, key) => ({\n    ...acc,\n    [key]: withErrorHandling(evaluationService[key])\n  }), {}),\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}