{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true,\n  timeout: 10000 // 10 second timeout\n});\n\n// Auth related API calls\nexport const login = async (username, password) => {\n  try {\n    var _response$data, _response$data$data;\n    console.log('Sending login request with data:', {\n      username,\n      password\n    });\n    const response = await api.post('/api/users/login/', {\n      username,\n      password\n    });\n    console.log('Login API response:', response.data);\n    if ((_response$data = response.data) !== null && _response$data !== void 0 && (_response$data$data = _response$data.data) !== null && _response$data$data !== void 0 && _response$data$data.access_token) {\n      // Store the token\n      const token = response.data.data.access_token;\n      localStorage.setItem('token', token);\n\n      // Store user info\n      const user = response.data.data.user;\n      localStorage.setItem('user', JSON.stringify(user));\n\n      // Update axios default headers\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      console.log('Token stored:', token);\n      console.log('User stored:', user);\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error('Login API error:', {\n      status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n      data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n      message: error.message\n    });\n    throw error;\n  }\n};\nexport const getMe = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n    const response = await api.get('/api/users/me/');\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error('GetMe API error:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\nexport const register = async userData => {\n  try {\n    console.log('Sending registration request with data:', userData);\n    const response = await api.post('/api/users/register/', userData);\n    console.log('Registration API response:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response5;\n    console.error('Registration API error:', {\n      status: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status,\n      data: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data,\n      message: error.message\n    });\n    throw error;\n  }\n};\n\n// Password reset functions\nexport const forgotPassword = async email => {\n  try {\n    const response = await api.post('/api/users/password-reset/', {\n      email\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    console.error('Password reset error:', ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n    throw error;\n  }\n};\nexport const resetPassword = async (token, password) => {\n  try {\n    const response = await api.post('/api/users/password-reset/confirm/', {\n      token,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response7;\n    console.error('Password reset confirm error:', ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n    throw error;\n  }\n};\n\n// Request interceptor for adding auth token and handling requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request interceptor error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for handling common responses and errors\napi.interceptors.response.use(response => response, async error => {\n  var _error$response8;\n  if (((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.status) === 401) {\n    // Handle unauthorized access\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  } else if (!error.response && error.message === 'Network Error') {\n    // Handle network errors\n    console.error('Network error - please check your connection');\n  } else {\n    var _error$response9;\n    // Log other errors\n    console.error('API Error:', ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","withCredentials","timeout","login","username","password","_response$data","_response$data$data","console","log","response","post","data","access_token","token","localStorage","setItem","user","JSON","stringify","defaults","common","error","_error$response","_error$response2","status","message","getMe","getItem","Error","get","_error$response3","register","userData","_error$response4","_error$response5","forgotPassword","email","_error$response6","resetPassword","_error$response7","interceptors","request","use","config","Authorization","Promise","reject","_error$response8","removeItem","window","location","href","_error$response9"],"sources":["/home/grythman/ims-proj/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with default config\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    withCredentials: true,\n    timeout: 10000, // 10 second timeout\n});\n\n// Auth related API calls\nexport const login = async (username, password) => {\n    try {\n        console.log('Sending login request with data:', { username, password });\n        const response = await api.post('/api/users/login/', {\n            username,\n            password\n        });\n        \n        console.log('Login API response:', response.data);\n        \n        if (response.data?.data?.access_token) {\n            // Store the token\n            const token = response.data.data.access_token;\n            localStorage.setItem('token', token);\n            \n            // Store user info\n            const user = response.data.data.user;\n            localStorage.setItem('user', JSON.stringify(user));\n            \n            // Update axios default headers\n            api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n            \n            console.log('Token stored:', token);\n            console.log('User stored:', user);\n        }\n        \n        return response.data;\n    } catch (error) {\n        console.error('Login API error:', {\n            status: error.response?.status,\n            data: error.response?.data,\n            message: error.message\n        });\n        throw error;\n    }\n};\n\nexport const getMe = async () => {\n    try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            throw new Error('No authentication token found');\n        }\n\n        const response = await api.get('/api/users/me/');\n        return response.data;\n    } catch (error) {\n        console.error('GetMe API error:', error.response?.data || error.message);\n        throw error;\n    }\n};\n\nexport const register = async (userData) => {\n    try {\n        console.log('Sending registration request with data:', userData);\n        const response = await api.post('/api/users/register/', userData);\n        console.log('Registration API response:', response.data);\n        return response.data;\n    } catch (error) {\n        console.error('Registration API error:', {\n            status: error.response?.status,\n            data: error.response?.data,\n            message: error.message\n        });\n        throw error;\n    }\n};\n\n// Password reset functions\nexport const forgotPassword = async (email) => {\n    try {\n        const response = await api.post('/api/users/password-reset/', { email });\n        return response.data;\n    } catch (error) {\n        console.error('Password reset error:', error.response?.data || error.message);\n        throw error;\n    }\n};\n\nexport const resetPassword = async (token, password) => {\n    try {\n        const response = await api.post('/api/users/password-reset/confirm/', {\n            token,\n            password\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Password reset confirm error:', error.response?.data || error.message);\n        throw error;\n    }\n};\n\n// Request interceptor for adding auth token and handling requests\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        console.error('Request interceptor error:', error);\n        return Promise.reject(error);\n    }\n);\n\n// Response interceptor for handling common responses and errors\napi.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n        if (error.response?.status === 401) {\n            // Handle unauthorized access\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            window.location.href = '/login';\n        } else if (!error.response && error.message === 'Network Error') {\n            // Handle network errors\n            console.error('Network error - please check your connection');\n        } else {\n            // Log other errors\n            console.error('API Error:', error.response?.data || error.message);\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}