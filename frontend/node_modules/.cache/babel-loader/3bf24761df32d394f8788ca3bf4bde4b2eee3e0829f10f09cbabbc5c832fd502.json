{"ast":null,"code":"import api from './api';\nconst studentApi = {\n  dashboard: {\n    // Dashboard Overview\n    getOverview: async () => {\n      try {\n        const response = await api.get('/api/dashboard/student/');\n        return response.data;\n      } catch (error) {\n        var _error$response, _error$response2;\n        console.error('Error fetching student dashboard:', error);\n        console.error('Error response:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n        console.error('Error status:', (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status);\n        console.error('Error message:', error.message);\n        throw error;\n      }\n    },\n    // Dashboard Stats\n    getStats: async () => {\n      try {\n        const response = await api.get('/api/users/stats/');\n        return response.data;\n      } catch (error) {\n        var _error$response3;\n        console.error('Error fetching student stats:', error);\n        console.error('Error response:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n        throw error;\n      }\n    },\n    // Recent Activities\n    getActivities: async () => {\n      try {\n        var _response$data;\n        const response = await api.get('/api/dashboard/student/activities/');\n        return ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data) || [];\n      } catch (error) {\n        var _error$response4;\n        console.error('Error fetching recent activities:', error);\n        console.error('Error response:', (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n        return []; // Return empty array on error\n      }\n    }\n  },\n  internships: {\n    // Register New Internship\n    register: async internshipData => {\n      try {\n        const response = await api.post('/api/internships/register/', internshipData);\n        return response.data;\n      } catch (error) {\n        console.error('Error registering internship:', error);\n        throw error;\n      }\n    },\n    // Get Current/Active Internship\n    getCurrent: async () => {\n      try {\n        const response = await api.get('/api/internships/current/');\n        return response.data;\n      } catch (error) {\n        console.error('Error fetching active internship:', error);\n        throw error;\n      }\n    },\n    // Get Companies\n    getCompanies: async () => {\n      try {\n        const response = await api.get('/api/companies/');\n        return response.data;\n      } catch (error) {\n        console.error('Error fetching companies:', error);\n        throw error;\n      }\n    },\n    // Get Mentors for a Company\n    getMentors: async companyId => {\n      try {\n        const response = await api.get(`/api/companies/${companyId}/mentors/`);\n        return response.data;\n      } catch (error) {\n        console.error('Error fetching mentors:', error);\n        throw error;\n      }\n    }\n  },\n  reports: {\n    // Get Reports\n    getAll: async () => {\n      try {\n        const response = await api.get('/api/reports/');\n        return response.data;\n      } catch (error) {\n        console.error('Error fetching reports:', error);\n        throw error;\n      }\n    },\n    // Submit Report\n    submit: async data => {\n      try {\n        const response = await api.post('/api/reports/submit/', data);\n        return response.data;\n      } catch (error) {\n        console.error('Error submitting report:', error);\n        throw error;\n      }\n    }\n  }\n};\nexport default studentApi;","map":{"version":3,"names":["api","studentApi","dashboard","getOverview","response","get","data","error","_error$response","_error$response2","console","status","message","getStats","_error$response3","getActivities","_response$data","_error$response4","internships","register","internshipData","post","getCurrent","getCompanies","getMentors","companyId","reports","getAll","submit"],"sources":["/home/grythman/ims-proj/frontend/src/services/studentApi.js"],"sourcesContent":["import api from './api';\n\nconst studentApi = {\n    dashboard: {\n        // Dashboard Overview\n        getOverview: async () => {\n            try {\n                const response = await api.get('/api/dashboard/student/');\n                return response.data;\n            } catch (error) {\n                console.error('Error fetching student dashboard:', error);\n                console.error('Error response:', error.response?.data);\n                console.error('Error status:', error.response?.status);\n                console.error('Error message:', error.message);\n                throw error;\n            }\n        },\n\n        // Dashboard Stats\n        getStats: async () => {\n            try {\n                const response = await api.get('/api/users/stats/');\n                return response.data;\n            } catch (error) {\n                console.error('Error fetching student stats:', error);\n                console.error('Error response:', error.response?.data);\n                throw error;\n            }\n        },\n\n        // Recent Activities\n        getActivities: async () => {\n            try {\n                const response = await api.get('/api/dashboard/student/activities/');\n                return response.data?.data || [];\n            } catch (error) {\n                console.error('Error fetching recent activities:', error);\n                console.error('Error response:', error.response?.data);\n                return [];  // Return empty array on error\n            }\n        }\n    },\n\n    internships: {\n        // Register New Internship\n        register: async (internshipData) => {\n            try {\n                const response = await api.post('/api/internships/register/', internshipData);\n                return response.data;\n            } catch (error) {\n                console.error('Error registering internship:', error);\n                throw error;\n            }\n        },\n\n        // Get Current/Active Internship\n        getCurrent: async () => {\n            try {\n                const response = await api.get('/api/internships/current/');\n                return response.data;\n            } catch (error) {\n                console.error('Error fetching active internship:', error);\n                throw error;\n            }\n        },\n\n        // Get Companies\n        getCompanies: async () => {\n            try {\n                const response = await api.get('/api/companies/');\n                return response.data;\n            } catch (error) {\n                console.error('Error fetching companies:', error);\n                throw error;\n            }\n        },\n\n        // Get Mentors for a Company\n        getMentors: async (companyId) => {\n            try {\n                const response = await api.get(`/api/companies/${companyId}/mentors/`);\n                return response.data;\n            } catch (error) {\n                console.error('Error fetching mentors:', error);\n                throw error;\n            }\n        }\n    },\n\n    reports: {\n        // Get Reports\n        getAll: async () => {\n            try {\n                const response = await api.get('/api/reports/');\n                return response.data;\n            } catch (error) {\n                console.error('Error fetching reports:', error);\n                throw error;\n            }\n        },\n\n        // Submit Report\n        submit: async (data) => {\n            try {\n                const response = await api.post('/api/reports/submit/', data);\n                return response.data;\n            } catch (error) {\n                console.error('Error submitting report:', error);\n                throw error;\n            }\n        }\n    }\n};\n\nexport default studentApi;\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}