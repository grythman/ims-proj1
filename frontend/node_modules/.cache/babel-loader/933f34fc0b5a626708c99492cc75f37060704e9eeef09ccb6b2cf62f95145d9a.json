{"ast":null,"code":"import api from './api';\nconst studentApi = {\n  dashboard: {\n    // Dashboard Overview\n    getOverview: async () => {\n      try {\n        const response = await api.get('/api/dashboard/student/');\n        return response.data;\n      } catch (error) {\n        console.error('Error fetching student dashboard:', error);\n        throw error;\n      }\n    },\n    // Dashboard Stats\n    getStats: async () => {\n      try {\n        const response = await api.get('/api/users/stats/');\n        return response.data;\n      } catch (error) {\n        console.error('Error fetching student stats:', error);\n        throw error;\n      }\n    },\n    // Recent Activities\n    getActivities: async () => {\n      try {\n        var _response$data;\n        const response = await api.get('/api/dashboard/student/activities/');\n        if (((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.status) === 'success') {\n          return response.data.data || [];\n        }\n        return [];\n      } catch (error) {\n        console.error('Error fetching recent activities:', error);\n        return [];\n      }\n    }\n  },\n  internships: {\n    // Get Current/Active Internship\n    getCurrent: async () => {\n      try {\n        var _response$data2;\n        const response = await api.get('/api/internships/my-internship/');\n        return ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.data) || null;\n      } catch (error) {\n        console.error('Error fetching current internship:', error);\n        return null;\n      }\n    },\n    // Register New Internship\n    register: async internshipData => {\n      try {\n        const response = await api.post('/api/internships/register/', internshipData);\n        return response.data;\n      } catch (error) {\n        console.error('Error registering internship:', error);\n        throw error;\n      }\n    },\n    // Get Companies\n    getCompanies: async () => {\n      try {\n        const response = await api.get('/api/companies/');\n        return response.data;\n      } catch (error) {\n        console.error('Error fetching companies:', error);\n        throw error;\n      }\n    },\n    // Get Mentors for a Company\n    getMentors: async companyId => {\n      try {\n        const response = await api.get(`/api/companies/${companyId}/mentors/`);\n        return response.data;\n      } catch (error) {\n        console.error('Error fetching mentors:', error);\n        throw error;\n      }\n    }\n  },\n  reports: {\n    // Get All Reports\n    getAll: async () => {\n      try {\n        var _response$data3;\n        const response = await api.get('/api/reports/');\n        return ((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.data) || [];\n      } catch (error) {\n        console.error('Error fetching reports:', error);\n        return [];\n      }\n    },\n    // Create Report\n    create: async reportData => {\n      try {\n        const response = await api.post('/api/reports/create/', reportData);\n        return response.data;\n      } catch (error) {\n        console.error('Error creating report:', error);\n        throw error;\n      }\n    },\n    // Submit Report\n    submit: async reportId => {\n      try {\n        const response = await api.post(`/api/reports/${reportId}/submit/`);\n        return response.data;\n      } catch (error) {\n        console.error('Error submitting report:', error);\n        throw error;\n      }\n    }\n  }\n};\nexport default studentApi;","map":{"version":3,"names":["api","studentApi","dashboard","getOverview","response","get","data","error","console","getStats","getActivities","_response$data","status","internships","getCurrent","_response$data2","register","internshipData","post","getCompanies","getMentors","companyId","reports","getAll","_response$data3","create","reportData","submit","reportId"],"sources":["/home/grythman/ims-proj/frontend/src/services/studentApi.js"],"sourcesContent":["import api from './api';\n\nconst studentApi = {\n    dashboard: {\n        // Dashboard Overview\n        getOverview: async () => {\n            try {\n                const response = await api.get('/api/dashboard/student/');\n                return response.data;\n            } catch (error) {\n                console.error('Error fetching student dashboard:', error);\n                throw error;\n            }\n        },\n\n        // Dashboard Stats\n        getStats: async () => {\n            try {\n                const response = await api.get('/api/users/stats/');\n                return response.data;\n            } catch (error) {\n                console.error('Error fetching student stats:', error);\n                throw error;\n            }\n        },\n\n        // Recent Activities\n        getActivities: async () => {\n            try {\n                const response = await api.get('/api/dashboard/student/activities/');\n                if (response.data?.status === 'success') {\n                    return response.data.data || [];\n                }\n                return [];\n            } catch (error) {\n                console.error('Error fetching recent activities:', error);\n                return [];\n            }\n        }\n    },\n\n    internships: {\n        // Get Current/Active Internship\n        getCurrent: async () => {\n            try {\n                const response = await api.get('/api/internships/my-internship/');\n                return response.data?.data || null;\n            } catch (error) {\n                console.error('Error fetching current internship:', error);\n                return null;\n            }\n        },\n\n        // Register New Internship\n        register: async (internshipData) => {\n            try {\n                const response = await api.post('/api/internships/register/', internshipData);\n                return response.data;\n            } catch (error) {\n                console.error('Error registering internship:', error);\n                throw error;\n            }\n        },\n\n        // Get Companies\n        getCompanies: async () => {\n            try {\n                const response = await api.get('/api/companies/');\n                return response.data;\n            } catch (error) {\n                console.error('Error fetching companies:', error);\n                throw error;\n            }\n        },\n\n        // Get Mentors for a Company\n        getMentors: async (companyId) => {\n            try {\n                const response = await api.get(`/api/companies/${companyId}/mentors/`);\n                return response.data;\n            } catch (error) {\n                console.error('Error fetching mentors:', error);\n                throw error;\n            }\n        }\n    },\n\n    reports: {\n        // Get All Reports\n        getAll: async () => {\n            try {\n                const response = await api.get('/api/reports/');\n                return response.data?.data || [];\n            } catch (error) {\n                console.error('Error fetching reports:', error);\n                return [];\n            }\n        },\n\n        // Create Report\n        create: async (reportData) => {\n            try {\n                const response = await api.post('/api/reports/create/', reportData);\n                return response.data;\n            } catch (error) {\n                console.error('Error creating report:', error);\n                throw error;\n            }\n        },\n\n        // Submit Report\n        submit: async (reportId) => {\n            try {\n                const response = await api.post(`/api/reports/${reportId}/submit/`);\n                return response.data;\n            } catch (error) {\n                console.error('Error submitting report:', error);\n                throw error;\n            }\n        }\n    }\n};\n\nexport default studentApi;\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}