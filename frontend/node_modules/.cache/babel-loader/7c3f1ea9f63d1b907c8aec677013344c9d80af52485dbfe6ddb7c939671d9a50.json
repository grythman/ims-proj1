{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\ims-proj\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { getMe, login as loginApi } from '../services/api';\nimport { getToken, removeToken, setToken } from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Function to fetch user data\n  const fetchUserData = async () => {\n    try {\n      const response = await getMe();\n      setUser(response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to fetch user data:', error);\n      removeToken();\n      setUser(null);\n      return null;\n    }\n  };\n\n  // Check authentication status on mount\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = getToken();\n      if (token) {\n        try {\n          await fetchUserData();\n        } catch (error) {\n          console.error('Auth initialization failed:', error);\n          removeToken();\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await loginApi(credentials);\n      console.log('Login response:', response);\n      const {\n        token,\n        user: userData\n      } = response.data;\n      if (!token) {\n        throw new Error('No token received');\n      }\n\n      // Store the token\n      setToken(token);\n\n      // Set user data if it was returned with login, otherwise fetch it\n      if (userData) {\n        setUser(userData);\n      } else {\n        await fetchUserData();\n      }\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login failed:', error);\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n      return false;\n    }\n  };\n  const logout = () => {\n    removeToken();\n    setUser(null);\n    // Optionally redirect to login page\n    window.location.href = '/login';\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    loading,\n    isAuthenticated: !!user\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","toast","getMe","login","loginApi","getToken","removeToken","setToken","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","fetchUserData","response","data","error","console","initAuth","token","credentials","log","userData","Error","_error$response","_error$response$data","message","logout","window","location","href","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","Provider","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/Admin/ims-proj/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { getMe, login as loginApi } from '../services/api';\nimport { getToken, removeToken, setToken } from '../utils/auth';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Function to fetch user data\n  const fetchUserData = async () => {\n    try {\n      const response = await getMe();\n      setUser(response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to fetch user data:', error);\n      removeToken();\n      setUser(null);\n      return null;\n    }\n  };\n\n  // Check authentication status on mount\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = getToken();\n      if (token) {\n        try {\n          await fetchUserData();\n        } catch (error) {\n          console.error('Auth initialization failed:', error);\n          removeToken();\n        }\n      }\n      setLoading(false);\n    };\n\n    initAuth();\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      const response = await loginApi(credentials);\n      console.log('Login response:', response);\n\n      const { token, user: userData } = response.data;\n\n      if (!token) {\n        throw new Error('No token received');\n      }\n\n      // Store the token\n      setToken(token);\n\n      // Set user data if it was returned with login, otherwise fetch it\n      if (userData) {\n        setUser(userData);\n      } else {\n        await fetchUserData();\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Login failed:', error);\n      toast.error(error.response?.data?.message || 'Login failed');\n      return false;\n    }\n  };\n\n  const logout = () => {\n    removeToken();\n    setUser(null);\n    // Optionally redirect to login page\n    window.location.href = '/login';\n  };\n\n  const value = {\n    user,\n    login,\n    logout,\n    loading,\n    isAuthenticated: !!user,\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}