{"ast":null,"code":"var _jsxFileName = \"/home/grythman/ims-proj/frontend/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { login as loginApi, getMe } from '../services/api';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const checkAuth = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const userData = await getMe();\n        setUser(userData);\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        localStorage.removeItem('token');\n        setUser(null);\n      }\n    }\n    setLoading(false);\n  };\n  const handleRoleBasedRedirect = userType => {\n    switch (userType) {\n      case 'student':\n        return '/dashboard';\n      case 'mentor':\n        return '/mentor/dashboard';\n      case 'teacher':\n        return '/teacher/dashboard';\n      case 'admin':\n        return '/admin/dashboard';\n      default:\n        return '/dashboard';\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      var _response$data;\n      console.log('Attempting login with:', {\n        username\n      });\n      const response = await loginApi(username, password);\n      console.log('Login response:', response);\n\n      // Check if the response has the expected structure\n      if ((response === null || response === void 0 ? void 0 : response.status) === 'success' && response !== null && response !== void 0 && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.access_token) {\n        localStorage.setItem('token', response.data.access_token);\n        setUser(response.data.user);\n        const redirectPath = handleRoleBasedRedirect(response.data.user.user_type);\n        console.log('Login successful, redirecting to:', redirectPath);\n        return {\n          data: response.data,\n          redirectPath\n        };\n      }\n      console.error('Invalid response format:', response);\n      throw new Error((response === null || response === void 0 ? void 0 : response.message) || 'Login failed: Invalid response format');\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response3$data, _error$response3$data2, _error$response3$data3, _error$response4, _error$response4$data, _error$response5, _error$response5$data;\n      console.error('Login error details:', {\n        response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n        status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status,\n        message: error.message\n      });\n\n      // Extract error message with fallbacks\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : (_error$response3$data2 = _error$response3$data.errors) === null || _error$response3$data2 === void 0 ? void 0 : (_error$response3$data3 = _error$response3$data2.error) === null || _error$response3$data3 === void 0 ? void 0 : _error$response3$data3[0]) || ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || error.message || 'Invalid username or password';\n      toast.error(errorMessage);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    return '/login';\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","login","loginApi","getMe","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","checkAuth","token","localStorage","getItem","userData","error","console","removeItem","handleRoleBasedRedirect","userType","username","password","_response$data","log","response","status","data","access_token","setItem","redirectPath","user_type","Error","message","_error$response","_error$response2","_error$response3","_error$response3$data","_error$response3$data2","_error$response3$data3","_error$response4","_error$response4$data","_error$response5","_error$response5$data","errorMessage","errors","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/grythman/ims-proj/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { login as loginApi, getMe } from '../services/api';\nimport { toast } from 'react-hot-toast';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n    const [user, setUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        checkAuth();\n    }, []);\n\n    const checkAuth = async () => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            try {\n                const userData = await getMe();\n                setUser(userData);\n            } catch (error) {\n                console.error('Auth check failed:', error);\n                localStorage.removeItem('token');\n                setUser(null);\n            }\n        }\n        setLoading(false);\n    };\n\n    const handleRoleBasedRedirect = (userType) => {\n        switch (userType) {\n            case 'student':\n                return '/dashboard';\n            case 'mentor':\n                return '/mentor/dashboard';\n            case 'teacher':\n                return '/teacher/dashboard';\n            case 'admin':\n                return '/admin/dashboard';\n            default:\n                return '/dashboard';\n        }\n    };\n\n    const login = async (username, password) => {\n        try {\n            console.log('Attempting login with:', { username });\n            const response = await loginApi(username, password);\n            console.log('Login response:', response);\n            \n            // Check if the response has the expected structure\n            if (response?.status === 'success' && response?.data?.access_token) {\n                localStorage.setItem('token', response.data.access_token);\n                setUser(response.data.user);\n                const redirectPath = handleRoleBasedRedirect(response.data.user.user_type);\n                console.log('Login successful, redirecting to:', redirectPath);\n                return {\n                    data: response.data,\n                    redirectPath\n                };\n            }\n            \n            console.error('Invalid response format:', response);\n            throw new Error(response?.message || 'Login failed: Invalid response format');\n        } catch (error) {\n            console.error('Login error details:', {\n                response: error.response?.data,\n                status: error.response?.status,\n                message: error.message\n            });\n            \n            // Extract error message with fallbacks\n            const errorMessage = \n                error.response?.data?.errors?.error?.[0] || \n                error.response?.data?.message ||\n                error.response?.data?.error ||\n                error.message ||\n                'Invalid username or password';\n                \n            toast.error(errorMessage);\n            throw error;\n        }\n    };\n\n    const logout = () => {\n        localStorage.removeItem('token');\n        setUser(null);\n        return '/login';\n    };\n\n    return (\n        <AuthContext.Provider value={{ user, loading, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}