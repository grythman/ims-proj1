{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\ims-proj\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getToken, setToken, removeToken } from '../utils/auth';\nimport { login as loginApi, getMe } from '../services/api';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Function to fetch user data\n  const fetchUserData = async () => {\n    try {\n      const response = await getMe();\n      setUser(response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to fetch user data:', error);\n      removeToken();\n      setUser(null);\n      return null;\n    }\n  };\n\n  // Check authentication status on mount\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = getToken();\n      if (token) {\n        try {\n          await fetchUserData();\n        } catch (error) {\n          console.error('Auth initialization failed:', error);\n          removeToken();\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await loginApi(username, password);\n      console.log('Login response:', response);\n      const {\n        token,\n        user: userData\n      } = response.data;\n      if (!token) {\n        throw new Error('No token received');\n      }\n\n      // Store the token\n      setToken(token);\n\n      // Set user data if it was returned with login, otherwise fetch it\n      if (userData) {\n        setUser(userData);\n      } else {\n        await fetchUserData();\n      }\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login failed:', error);\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n      return false;\n    }\n  };\n  const logout = () => {\n    removeToken();\n    setUser(null);\n    // Optionally redirect to login page\n    window.location.href = '/login';\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    loading,\n    isAuthenticated: !!user\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","getToken","setToken","removeToken","login","loginApi","getMe","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","fetchUserData","response","data","error","console","initAuth","token","username","password","log","userData","Error","_error$response","_error$response$data","message","logout","window","location","href","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","Provider","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/Admin/ims-proj/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { getToken, setToken, removeToken } from '../utils/auth';\nimport { login as loginApi, getMe } from '../services/api';\nimport { toast } from 'react-hot-toast';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Function to fetch user data\n  const fetchUserData = async () => {\n    try {\n      const response = await getMe();\n      setUser(response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to fetch user data:', error);\n      removeToken();\n      setUser(null);\n      return null;\n    }\n  };\n\n  // Check authentication status on mount\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = getToken();\n      if (token) {\n        try {\n          await fetchUserData();\n        } catch (error) {\n          console.error('Auth initialization failed:', error);\n          removeToken();\n        }\n      }\n      setLoading(false);\n    };\n\n    initAuth();\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      const response = await loginApi(username, password);\n      console.log('Login response:', response);\n\n      const { token, user: userData } = response.data;\n      \n      if (!token) {\n        throw new Error('No token received');\n      }\n\n      // Store the token\n      setToken(token);\n\n      // Set user data if it was returned with login, otherwise fetch it\n      if (userData) {\n        setUser(userData);\n      } else {\n        await fetchUserData();\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Login failed:', error);\n      toast.error(error.response?.data?.message || 'Login failed');\n      return false;\n    }\n  };\n\n  const logout = () => {\n    removeToken();\n    setUser(null);\n    // Optionally redirect to login page\n    window.location.href = '/login';\n  };\n\n  const value = {\n    user,\n    login,\n    logout,\n    loading,\n    isAuthenticated: !!user,\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}