{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\ims-proj\\\\frontend\\\\src\\\\components\\\\student\\\\EditProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../UI/Card';\nimport { Button } from '../UI/Button';\nimport { UserCog } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditProfile = () => {\n  _s();\n  const [editing, setEditing] = useState(false);\n  const [error, setError] = useState(null);\n  const handleEdit = async () => {\n    setEditing(true);\n    setError(null);\n    try {\n      // In a real application, you would open a modal or navigate to an edit form\n      // For this example, we'll just simulate an API call\n      await axios.put('/api/student/profile', {/* updated profile data */});\n      // Handle successful edit (e.g., show a success message)\n    } catch (err) {\n      setError('Failed to update profile');\n    } finally {\n      setEditing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"group relative overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-gradient-to-r from-pink-500/10 to-pink-500/5 opacity-0 transition-opacity group-hover:opacity-100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-lg bg-pink-500/10 p-2 w-fit\",\n        children: /*#__PURE__*/_jsxDEV(UserCog, {\n          className: \"h-6 w-6 text-pink-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n        className: \"mt-4\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n        children: \"Update your personal information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        className: \"w-full bg-pink-500/10 hover:bg-pink-500/20 text-pink-500\",\n        onClick: handleEdit,\n        disabled: editing,\n        children: editing ? 'Updating...' : 'Edit Profile'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mt-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(EditProfile, \"1rBVLUB5xxogeZ/YEk2/j4xkHzQ=\");\n_c = EditProfile;\nexport default EditProfile;\nvar _c;\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"names":["React","useState","axios","Card","CardContent","CardDescription","CardHeader","CardTitle","Button","UserCog","jsxDEV","_jsxDEV","EditProfile","_s","editing","setEditing","error","setError","handleEdit","put","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Admin/ims-proj/frontend/src/components/student/EditProfile.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../UI/Card'\r\nimport { Button } from '../UI/Button'\r\nimport { UserCog } from 'lucide-react'\r\n\r\nconst EditProfile = () => {\r\n  const [editing, setEditing] = useState(false)\r\n  const [error, setError] = useState(null)\r\n\r\n  const handleEdit = async () => {\r\n    setEditing(true)\r\n    setError(null)\r\n    try {\r\n      // In a real application, you would open a modal or navigate to an edit form\r\n      // For this example, we'll just simulate an API call\r\n      await axios.put('/api/student/profile', { /* updated profile data */ })\r\n      // Handle successful edit (e.g., show a success message)\r\n    } catch (err) {\r\n      setError('Failed to update profile')\r\n    } finally {\r\n      setEditing(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className=\"group relative overflow-hidden\">\r\n      <div className=\"absolute inset-0 bg-gradient-to-r from-pink-500/10 to-pink-500/5 opacity-0 transition-opacity group-hover:opacity-100\" />\r\n      <CardHeader>\r\n        <div className=\"rounded-lg bg-pink-500/10 p-2 w-fit\">\r\n          <UserCog className=\"h-6 w-6 text-pink-500\" />\r\n        </div>\r\n        <CardTitle className=\"mt-4\">Edit Profile</CardTitle>\r\n        <CardDescription>Update your personal information</CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <Button\r\n          variant=\"secondary\"\r\n          className=\"w-full bg-pink-500/10 hover:bg-pink-500/20 text-pink-500\"\r\n          onClick={handleEdit}\r\n          disabled={editing}\r\n        >\r\n          {editing ? 'Updating...' : 'Edit Profile'}\r\n        </Button>\r\n        {error && <p className=\"text-red-500 mt-2\">{error}</p>}\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default EditProfile"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}