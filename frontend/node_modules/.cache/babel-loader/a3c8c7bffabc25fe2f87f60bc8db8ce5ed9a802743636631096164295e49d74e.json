{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true,\n  timeout: 10000 // 10 second timeout\n});\n\n// Auth related API calls\nexport const login = async (username, password) => {\n  try {\n    var _response$data, _response$data$data;\n    const response = await api.post('/api/users/login/', {\n      username,\n      password\n    });\n    if ((_response$data = response.data) !== null && _response$data !== void 0 && (_response$data$data = _response$data.data) !== null && _response$data$data !== void 0 && _response$data$data.access_token) {\n      localStorage.setItem('token', response.data.data.access_token);\n      localStorage.setItem('user', JSON.stringify(response.data.data.user));\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Login API error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\nexport const getMe = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n    const response = await api.get('/api/users/me/');\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error('GetMe API error:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    throw error;\n  }\n};\nexport const register = async userData => {\n  try {\n    console.log('Sending registration request with data:', userData);\n    const response = await api.post('/api/users/register/', userData);\n    console.log('Registration API response:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response4;\n    console.error('Registration API error:', {\n      status: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status,\n      data: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data,\n      message: error.message\n    });\n    throw error;\n  }\n};\n\n// Password reset functions\nexport const forgotPassword = async email => {\n  try {\n    const response = await api.post('/api/users/password-reset/', {\n      email\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response5;\n    console.error('Password reset error:', ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw error;\n  }\n};\nexport const resetPassword = async (token, password) => {\n  try {\n    const response = await api.post('/api/users/password-reset/confirm/', {\n      token,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    console.error('Password reset confirm error:', ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n    throw error;\n  }\n};\n\n// Request interceptor for adding auth token and handling requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request interceptor error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for handling common responses and errors\napi.interceptors.response.use(response => response, async error => {\n  var _error$response7;\n  if (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status) === 401) {\n    // Handle unauthorized access\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  } else if (!error.response && error.message === 'Network Error') {\n    // Handle network errors\n    console.error('Network error - please check your connection');\n  } else {\n    var _error$response8;\n    // Log other errors\n    console.error('API Error:', ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || error.message);\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","withCredentials","timeout","login","username","password","_response$data","_response$data$data","response","post","data","access_token","localStorage","setItem","JSON","stringify","user","error","_error$response","console","message","getMe","token","getItem","Error","get","_error$response2","register","userData","log","_error$response3","_error$response4","status","forgotPassword","email","_error$response5","resetPassword","_error$response6","interceptors","request","use","config","Authorization","Promise","reject","_error$response7","removeItem","window","location","href","_error$response8"],"sources":["/home/grythman/ims-proj/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with default config\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n    headers: {\n        'Content-Type': 'application/json',\n    },\n    withCredentials: true,\n    timeout: 10000, // 10 second timeout\n});\n\n// Auth related API calls\nexport const login = async (username, password) => {\n    try {\n        const response = await api.post('/api/users/login/', {\n            username,\n            password\n        });\n        \n        if (response.data?.data?.access_token) {\n            localStorage.setItem('token', response.data.data.access_token);\n            localStorage.setItem('user', JSON.stringify(response.data.data.user));\n        }\n        \n        return response.data;\n    } catch (error) {\n        console.error('Login API error:', error.response?.data || error.message);\n        throw error;\n    }\n};\n\nexport const getMe = async () => {\n    try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            throw new Error('No authentication token found');\n        }\n\n        const response = await api.get('/api/users/me/');\n        return response.data;\n    } catch (error) {\n        console.error('GetMe API error:', error.response?.data || error.message);\n        throw error;\n    }\n};\n\nexport const register = async (userData) => {\n    try {\n        console.log('Sending registration request with data:', userData);\n        const response = await api.post('/api/users/register/', userData);\n        console.log('Registration API response:', response.data);\n        return response.data;\n    } catch (error) {\n        console.error('Registration API error:', {\n            status: error.response?.status,\n            data: error.response?.data,\n            message: error.message\n        });\n        throw error;\n    }\n};\n\n// Password reset functions\nexport const forgotPassword = async (email) => {\n    try {\n        const response = await api.post('/api/users/password-reset/', { email });\n        return response.data;\n    } catch (error) {\n        console.error('Password reset error:', error.response?.data || error.message);\n        throw error;\n    }\n};\n\nexport const resetPassword = async (token, password) => {\n    try {\n        const response = await api.post('/api/users/password-reset/confirm/', {\n            token,\n            password\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Password reset confirm error:', error.response?.data || error.message);\n        throw error;\n    }\n};\n\n// Request interceptor for adding auth token and handling requests\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        console.error('Request interceptor error:', error);\n        return Promise.reject(error);\n    }\n);\n\n// Response interceptor for handling common responses and errors\napi.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n        if (error.response?.status === 401) {\n            // Handle unauthorized access\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            window.location.href = '/login';\n        } else if (!error.response && error.message === 'Network Error') {\n            // Handle network errors\n            console.error('Network error - please check your connection');\n        } else {\n            // Log other errors\n            console.error('API Error:', error.response?.data || error.message);\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}