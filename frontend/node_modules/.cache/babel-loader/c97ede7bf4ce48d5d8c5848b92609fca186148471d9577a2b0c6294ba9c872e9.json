{"ast":null,"code":"import api from './api';\nconst studentApi = {\n  // Dashboard Overview\n  getOverview: async () => {\n    try {\n      const response = await api.get('/api/dashboard/student/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching student dashboard:', error);\n      throw error;\n    }\n  },\n  // Preliminary Report Status\n  getPreliminaryStatus: async () => {\n    try {\n      const response = await api.get('/api/reports/preliminary/status/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching preliminary report status:', error);\n      throw error;\n    }\n  },\n  // Submit Preliminary Report\n  submitPreliminaryReport: async data => {\n    try {\n      const response = await api.post('/api/reports/preliminary/submit/', data);\n      return response.data;\n    } catch (error) {\n      console.error('Error submitting preliminary report:', error);\n      throw error;\n    }\n  },\n  // Get Student Progress\n  getProgress: async () => {\n    try {\n      const response = await api.get('/api/internships/student/progress/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching student progress:', error);\n      throw error;\n    }\n  },\n  // Get Student Reports\n  getReports: async (params = {}) => {\n    try {\n      const response = await api.get('/api/reports/student/', {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching student reports:', error);\n      throw error;\n    }\n  },\n  // Get Student Tasks\n  getTasks: async (params = {}) => {\n    try {\n      const response = await api.get('/api/internships/student/tasks/', {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching student tasks:', error);\n      throw error;\n    }\n  }\n};\nexport default studentApi;","map":{"version":3,"names":["api","studentApi","getOverview","response","get","data","error","console","getPreliminaryStatus","submitPreliminaryReport","post","getProgress","getReports","params","getTasks"],"sources":["C:/Users/Admin/ims-proj/frontend/src/services/studentApi.js"],"sourcesContent":["import api from './api';\n\nconst studentApi = {\n    // Dashboard Overview\n    getOverview: async () => {\n        try {\n            const response = await api.get('/api/dashboard/student/');\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching student dashboard:', error);\n            throw error;\n        }\n    },\n\n    // Preliminary Report Status\n    getPreliminaryStatus: async () => {\n        try {\n            const response = await api.get('/api/reports/preliminary/status/');\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching preliminary report status:', error);\n            throw error;\n        }\n    },\n\n    // Submit Preliminary Report\n    submitPreliminaryReport: async (data) => {\n        try {\n            const response = await api.post('/api/reports/preliminary/submit/', data);\n            return response.data;\n        } catch (error) {\n            console.error('Error submitting preliminary report:', error);\n            throw error;\n        }\n    },\n\n    // Get Student Progress\n    getProgress: async () => {\n        try {\n            const response = await api.get('/api/internships/student/progress/');\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching student progress:', error);\n            throw error;\n        }\n    },\n\n    // Get Student Reports\n    getReports: async (params = {}) => {\n        try {\n            const response = await api.get('/api/reports/student/', { params });\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching student reports:', error);\n            throw error;\n        }\n    },\n\n    // Get Student Tasks\n    getTasks: async (params = {}) => {\n        try {\n            const response = await api.get('/api/internships/student/tasks/', { params });\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching student tasks:', error);\n            throw error;\n        }\n    }\n};\n\nexport default studentApi;\n  "],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,UAAU,GAAG;EACf;EACAC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACrB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,yBAAyB,CAAC;MACzD,OAAOD,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzD,MAAMA,KAAK;IACf;EACJ,CAAC;EAED;EACAE,oBAAoB,EAAE,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAML,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,kCAAkC,CAAC;MAClE,OAAOD,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACjE,MAAMA,KAAK;IACf;EACJ,CAAC;EAED;EACAG,uBAAuB,EAAE,MAAOJ,IAAI,IAAK;IACrC,IAAI;MACA,MAAMF,QAAQ,GAAG,MAAMH,GAAG,CAACU,IAAI,CAAC,kCAAkC,EAAEL,IAAI,CAAC;MACzE,OAAOF,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5D,MAAMA,KAAK;IACf;EACJ,CAAC;EAED;EACAK,WAAW,EAAE,MAAAA,CAAA,KAAY;IACrB,IAAI;MACA,MAAMR,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,oCAAoC,CAAC;MACpE,OAAOD,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,MAAMA,KAAK;IACf;EACJ,CAAC;EAED;EACAM,UAAU,EAAE,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;IAC/B,IAAI;MACA,MAAMV,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,uBAAuB,EAAE;QAAES;MAAO,CAAC,CAAC;MACnE,OAAOV,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,MAAMA,KAAK;IACf;EACJ,CAAC;EAED;EACAQ,QAAQ,EAAE,MAAAA,CAAOD,MAAM,GAAG,CAAC,CAAC,KAAK;IAC7B,IAAI;MACA,MAAMV,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,iCAAiC,EAAE;QAAES;MAAO,CAAC,CAAC;MAC7E,OAAOV,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,MAAMA,KAAK;IACf;EACJ;AACJ,CAAC;AAED,eAAeL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}