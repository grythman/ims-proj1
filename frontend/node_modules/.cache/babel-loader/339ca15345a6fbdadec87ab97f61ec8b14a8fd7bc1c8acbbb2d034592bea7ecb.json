{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\ims-proj\\\\frontend\\\\src\\\\components\\\\Auth\\\\RoleRoute.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoleRoute = ({\n  children,\n  allowedRoles\n}) => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 16\n    }, this);\n  }\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n  if (!allowedRoles.includes(user.user_type)) {\n    // Redirect to appropriate dashboard based on user role\n    switch (user.user_type) {\n      case 'student':\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 24\n        }, this);\n      case 'mentor':\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/mentor/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 24\n        }, this);\n      case 'teacher':\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/teacher/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 24\n        }, this);\n      case 'admin':\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/admin/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 24\n        }, this);\n    }\n  }\n  return children;\n};\n_s(RoleRoute, \"EmJkapf7qiLC5Br5eCoEq4veZes=\", false, function () {\n  return [useAuth];\n});\n_c = RoleRoute;\nexport default RoleRoute;\nvar _c;\n$RefreshReg$(_c, \"RoleRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","RoleRoute","children","allowedRoles","_s","user","loading","fileName","_jsxFileName","lineNumber","columnNumber","to","includes","user_type","_c","$RefreshReg$"],"sources":["C:/Users/Admin/ims-proj/frontend/src/components/Auth/RoleRoute.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nconst RoleRoute = ({ children, allowedRoles }) => {\r\n    const { user, loading } = useAuth();\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (!user) {\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    if (!allowedRoles.includes(user.user_type)) {\r\n        // Redirect to appropriate dashboard based on user role\r\n        switch (user.user_type) {\r\n            case 'student':\r\n                return <Navigate to=\"/dashboard\" />;\r\n            case 'mentor':\r\n                return <Navigate to=\"/mentor/dashboard\" />;\r\n            case 'teacher':\r\n                return <Navigate to=\"/teacher/dashboard\" />;\r\n            case 'admin':\r\n                return <Navigate to=\"/admin/dashboard\" />;\r\n            default:\r\n                return <Navigate to=\"/dashboard\" />;\r\n        }\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default RoleRoute; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGR,OAAO,CAAC,CAAC;EAEnC,IAAIQ,OAAO,EAAE;IACT,oBAAON,OAAA;MAAAE,QAAA,EAAK;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,IAAI,CAACL,IAAI,EAAE;IACP,oBAAOL,OAAA,CAACH,QAAQ;MAACc,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;EAEA,IAAI,CAACP,YAAY,CAACS,QAAQ,CAACP,IAAI,CAACQ,SAAS,CAAC,EAAE;IACxC;IACA,QAAQR,IAAI,CAACQ,SAAS;MAClB,KAAK,SAAS;QACV,oBAAOb,OAAA,CAACH,QAAQ;UAACc,EAAE,EAAC;QAAY;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACvC,KAAK,QAAQ;QACT,oBAAOV,OAAA,CAACH,QAAQ;UAACc,EAAE,EAAC;QAAmB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC9C,KAAK,SAAS;QACV,oBAAOV,OAAA,CAACH,QAAQ;UAACc,EAAE,EAAC;QAAoB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC/C,KAAK,OAAO;QACR,oBAAOV,OAAA,CAACH,QAAQ;UAACc,EAAE,EAAC;QAAkB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC7C;QACI,oBAAOV,OAAA,CAACH,QAAQ;UAACc,EAAE,EAAC;QAAY;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IAC3C;EACJ;EAEA,OAAOR,QAAQ;AACnB,CAAC;AAACE,EAAA,CA5BIH,SAAS;EAAA,QACeH,OAAO;AAAA;AAAAgB,EAAA,GAD/Bb,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}