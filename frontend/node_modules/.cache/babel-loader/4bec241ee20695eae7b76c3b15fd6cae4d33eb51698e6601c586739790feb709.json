{"ast":null,"code":"import React,{useState}from'react';import{useNavigate,useSearchParams}from'react-router-dom';import{toast}from'react-hot-toast';import{resetPassword}from'../../services/api';import{Button}from'../../components/UI/Button';import{Card,CardContent}from'../../components/UI/Card';import Input from'../../components/UI/Input';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResetPassword=()=>{const[searchParams]=useSearchParams();const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[loading,setLoading]=useState(false);const navigate=useNavigate();const token=searchParams.get('token');const handleSubmit=async e=>{e.preventDefault();if(password!==confirmPassword){toast.error('Passwords do not match');return;}setLoading(true);try{await resetPassword(token,password);toast.success('Password has been reset successfully');navigate('/login');}catch(error){var _error$response,_error$response$data;console.error('Password reset error:',error);toast.error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Failed to reset password');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-100 flex flex-col justify-center py-12 sm:px-6 lg:px-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sm:mx-auto sm:w-full sm:max-w-md\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"mt-6 text-center text-3xl font-extrabold text-gray-900\",children:\"Reset your password\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(\"form\",{className:\"space-y-6\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(Input,{label:\"New Password\",type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(Input,{label:\"Confirm New Password\",type:\"password\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(Button,{type:\"submit\",className:\"w-full\",loading:loading,children:\"Reset Password\"})]})})})})]});};export default ResetPassword;","map":{"version":3,"names":["React","useState","useNavigate","useSearchParams","toast","resetPassword","Button","Card","CardContent","Input","jsx","_jsx","jsxs","_jsxs","ResetPassword","searchParams","password","setPassword","confirmPassword","setConfirmPassword","loading","setLoading","navigate","token","get","handleSubmit","e","preventDefault","error","success","_error$response","_error$response$data","console","response","data","className","children","onSubmit","label","type","value","onChange","target","required"],"sources":["C:/Users/Admin/ims-proj/frontend/src/pages/auth/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { toast } from 'react-hot-toast';\r\nimport { resetPassword } from '../../services/api';\r\nimport { Button } from '../../components/UI/Button';\r\nimport { Card, CardContent } from '../../components/UI/Card';\r\nimport Input from '../../components/UI/Input';\r\n\r\nconst ResetPassword = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const token = searchParams.get('token');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      toast.error('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    try {\r\n      await resetPassword(token, password);\r\n      toast.success('Password has been reset successfully');\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error('Password reset error:', error);\r\n      toast.error(error.response?.data?.error || 'Failed to reset password');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n          Reset your password\r\n        </h2>\r\n      </div>\r\n\r\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n        <Card>\r\n          <CardContent>\r\n            <form className=\"space-y-6\" onSubmit={handleSubmit}>\r\n              <Input\r\n                label=\"New Password\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n\r\n              <Input\r\n                label=\"Confirm New Password\"\r\n                type=\"password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                required\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"w-full\"\r\n                loading={loading}\r\n              >\r\n                Reset Password\r\n              </Button>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}