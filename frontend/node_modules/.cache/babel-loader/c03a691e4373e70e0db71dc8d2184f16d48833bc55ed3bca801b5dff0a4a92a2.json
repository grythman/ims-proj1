{"ast":null,"code":"import axios from 'axios';\nimport { getToken } from '../utils/auth';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\napi.interceptors.request.use(config => {\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response$data;\n  const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'An error occurred';\n  return Promise.reject(new Error(message));\n});\n\n// Auth API functions\nexport const login = credentials => api.post('/api/users/login/', credentials);\nexport const register = userData => api.post('/api/users/register/', userData);\nexport const getMe = () => api.get('/api/users/me/');\n\n// Dashboard API functions\nexport const getDashboardData = () => api.get('/api/dashboard/');\nexport const getStats = () => api.get('/api/users/stats/');\nexport default api;","map":{"version":3,"names":["axios","getToken","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","Authorization","error","Promise","reject","response","_error$response","_error$response$data","message","data","Error","login","credentials","post","register","userData","getMe","get","getDashboardData","getStats"],"sources":["C:/Users/Admin/ims-proj/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { getToken } from '../utils/auth';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\napi.interceptors.request.use(\n  (config) => {\n    const token = getToken();\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    const message = error.response?.data?.message || 'An error occurred';\n    return Promise.reject(new Error(message));\n  }\n);\n\n// Auth API functions\nexport const login = (credentials) => api.post('/api/users/login/', credentials);\nexport const register = (userData) => api.post('/api/users/register/', userData);\nexport const getMe = () => api.get('/api/users/me/');\n\n// Dashboard API functions\nexport const getDashboardData = () => api.get('/api/dashboard/');\nexport const getStats = () => api.get('/api/users/stats/');\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,eAAe;AAExC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EACtCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGZ,QAAQ,CAAC,CAAC;EACxB,IAAIY,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACM,aAAa,GAAG,UAAUD,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAG,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAEDb,GAAG,CAACO,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC1BO,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA,EAAAC,oBAAA;EACT,MAAMC,OAAO,GAAG,EAAAF,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBG,IAAI,cAAAF,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI,mBAAmB;EACpE,OAAOL,OAAO,CAACC,MAAM,CAAC,IAAIM,KAAK,CAACF,OAAO,CAAC,CAAC;AAC3C,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,KAAK,GAAIC,WAAW,IAAKvB,GAAG,CAACwB,IAAI,CAAC,mBAAmB,EAAED,WAAW,CAAC;AAChF,OAAO,MAAME,QAAQ,GAAIC,QAAQ,IAAK1B,GAAG,CAACwB,IAAI,CAAC,sBAAsB,EAAEE,QAAQ,CAAC;AAChF,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM3B,GAAG,CAAC4B,GAAG,CAAC,gBAAgB,CAAC;;AAEpD;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM7B,GAAG,CAAC4B,GAAG,CAAC,iBAAiB,CAAC;AAChE,OAAO,MAAME,QAAQ,GAAGA,CAAA,KAAM9B,GAAG,CAAC4B,GAAG,CAAC,mBAAmB,CAAC;AAE1D,eAAe5B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}