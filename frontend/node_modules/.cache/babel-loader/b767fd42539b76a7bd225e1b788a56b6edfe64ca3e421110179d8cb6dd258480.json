{"ast":null,"code":"import api from './api';\nconst ENDPOINTS = {\n  EVALUATIONS: '/api/evaluations',\n  INTERNSHIPS: '/api/internships',\n  REPORTS: '/api/reports'\n};\n\n// Evaluation management\nexport const evaluationService = {\n  // Get mentor evaluation\n  getMentorEvaluation: async () => {\n    try {\n      const response = await api.get(`${ENDPOINTS.EVALUATIONS}/mentor/`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching mentor evaluation:', error);\n      throw error;\n    }\n  },\n  // Get teacher evaluation\n  getTeacherEvaluation: async () => {\n    try {\n      const response = await api.get(`${ENDPOINTS.EVALUATIONS}/teacher/`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching teacher evaluation:', error);\n      throw error;\n    }\n  },\n  // Submit evaluation\n  submitEvaluation: async evaluationData => {\n    try {\n      const response = await api.post(`${ENDPOINTS.EVALUATIONS}/`, evaluationData);\n      return response.data;\n    } catch (error) {\n      console.error('Error submitting evaluation:', error);\n      throw error;\n    }\n  },\n  // Get evaluation history\n  getEvaluationHistory: async () => {\n    try {\n      const response = await api.get(`${ENDPOINTS.EVALUATIONS}/history/`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching evaluation history:', error);\n      throw error;\n    }\n  }\n};\n\n// Internship management\nexport const internshipService = {\n  // Get internship duration\n  getDuration: async () => {\n    try {\n      const response = await api.get(`${ENDPOINTS.INTERNSHIPS}/duration/`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching internship duration:', error);\n      throw error;\n    }\n  },\n  // Get current internship\n  getCurrent: async () => {\n    try {\n      const response = await api.get(`${ENDPOINTS.INTERNSHIPS}/current/`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching current internship:', error);\n      throw error;\n    }\n  }\n};\n\n// Report management\nexport const reportService = {\n  // Get preliminary report status\n  getPreliminaryStatus: async () => {\n    try {\n      const response = await api.get(`${ENDPOINTS.REPORTS}/preliminary/status/`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching preliminary status:', error);\n      throw error;\n    }\n  },\n  // Submit preliminary report\n  submitPreliminary: async reportData => {\n    try {\n      const response = await api.post(`${ENDPOINTS.REPORTS}/preliminary/`, reportData);\n      return response.data;\n    } catch (error) {\n      console.error('Error submitting preliminary report:', error);\n      throw error;\n    }\n  }\n};\n\n// Error handling wrapper\nconst withErrorHandling = apiCall => async (...args) => {\n  try {\n    const response = await apiCall(...args);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 404) {\n      console.warn('Resource not found:', error.config.url);\n      return null;\n    }\n    throw error;\n  }\n};\n\n// Export wrapped services\nexport default {\n  evaluations: Object.keys(evaluationService).reduce((acc, key) => ({\n    ...acc,\n    [key]: withErrorHandling(evaluationService[key])\n  }), {}),\n  internships: Object.keys(internshipService).reduce((acc, key) => ({\n    ...acc,\n    [key]: withErrorHandling(internshipService[key])\n  }), {}),\n  reports: Object.keys(reportService).reduce((acc, key) => ({\n    ...acc,\n    [key]: withErrorHandling(reportService[key])\n  }), {})\n};","map":{"version":3,"names":["api","ENDPOINTS","EVALUATIONS","INTERNSHIPS","REPORTS","evaluationService","getMentorEvaluation","response","get","data","error","console","getTeacherEvaluation","submitEvaluation","evaluationData","post","getEvaluationHistory","internshipService","getDuration","getCurrent","reportService","getPreliminaryStatus","submitPreliminary","reportData","withErrorHandling","apiCall","args","_error$response","status","warn","config","url","evaluations","Object","keys","reduce","acc","key","internships","reports"],"sources":["C:/Users/Admin/ims-proj/frontend/src/services/mentorApi.js"],"sourcesContent":["import api from './api';\n\nconst ENDPOINTS = {\n    EVALUATIONS: '/api/evaluations',\n    INTERNSHIPS: '/api/internships',\n    REPORTS: '/api/reports',\n};\n\n// Evaluation management\nexport const evaluationService = {\n    // Get mentor evaluation\n    getMentorEvaluation: async () => {\n        try {\n            const response = await api.get(`${ENDPOINTS.EVALUATIONS}/mentor/`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching mentor evaluation:', error);\n            throw error;\n        }\n    },\n\n    // Get teacher evaluation\n    getTeacherEvaluation: async () => {\n        try {\n            const response = await api.get(`${ENDPOINTS.EVALUATIONS}/teacher/`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching teacher evaluation:', error);\n            throw error;\n        }\n    },\n\n    // Submit evaluation\n    submitEvaluation: async (evaluationData) => {\n        try {\n            const response = await api.post(`${ENDPOINTS.EVALUATIONS}/`, evaluationData);\n            return response.data;\n        } catch (error) {\n            console.error('Error submitting evaluation:', error);\n            throw error;\n        }\n    },\n\n    // Get evaluation history\n    getEvaluationHistory: async () => {\n        try {\n            const response = await api.get(`${ENDPOINTS.EVALUATIONS}/history/`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching evaluation history:', error);\n            throw error;\n        }\n    }\n};\n\n// Internship management\nexport const internshipService = {\n    // Get internship duration\n    getDuration: async () => {\n        try {\n            const response = await api.get(`${ENDPOINTS.INTERNSHIPS}/duration/`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching internship duration:', error);\n            throw error;\n        }\n    },\n\n    // Get current internship\n    getCurrent: async () => {\n        try {\n            const response = await api.get(`${ENDPOINTS.INTERNSHIPS}/current/`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching current internship:', error);\n            throw error;\n        }\n    }\n};\n\n// Report management\nexport const reportService = {\n    // Get preliminary report status\n    getPreliminaryStatus: async () => {\n        try {\n            const response = await api.get(`${ENDPOINTS.REPORTS}/preliminary/status/`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching preliminary status:', error);\n            throw error;\n        }\n    },\n\n    // Submit preliminary report\n    submitPreliminary: async (reportData) => {\n        try {\n            const response = await api.post(`${ENDPOINTS.REPORTS}/preliminary/`, reportData);\n            return response.data;\n        } catch (error) {\n            console.error('Error submitting preliminary report:', error);\n            throw error;\n        }\n    }\n};\n\n// Error handling wrapper\nconst withErrorHandling = (apiCall) => async (...args) => {\n    try {\n        const response = await apiCall(...args);\n        return response.data;\n    } catch (error) {\n        if (error.response?.status === 404) {\n            console.warn('Resource not found:', error.config.url);\n            return null;\n        }\n        throw error;\n    }\n};\n\n// Export wrapped services\nexport default {\n    evaluations: Object.keys(evaluationService).reduce((acc, key) => ({\n        ...acc,\n        [key]: withErrorHandling(evaluationService[key])\n    }), {}),\n    internships: Object.keys(internshipService).reduce((acc, key) => ({\n        ...acc,\n        [key]: withErrorHandling(internshipService[key])\n    }), {}),\n    reports: Object.keys(reportService).reduce((acc, key) => ({\n        ...acc,\n        [key]: withErrorHandling(reportService[key])\n    }), {})\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}