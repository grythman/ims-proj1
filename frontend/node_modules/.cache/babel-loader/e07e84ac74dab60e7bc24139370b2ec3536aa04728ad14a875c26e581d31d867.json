{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: true,\n  timeout: 10000 // 10 second timeout\n});\n\n// Auth related API calls\nexport const login = async (username, password) => {\n  try {\n    var _response$data;\n    console.log('Sending login request with data:', {\n      username,\n      password\n    });\n    const response = await api.post('/api/users/login/', {\n      username,\n      password\n    }, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    });\n    console.log('Login API response:', response.data);\n    if (((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.status) === 'success') {\n      const {\n        access_token,\n        user\n      } = response.data.data;\n      // Store the token\n      localStorage.setItem('token', access_token);\n      // Update axios default headers\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error('Login API error:', {\n      status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n      data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n      message: error.message\n    });\n    throw error;\n  }\n};\nexport const getMe = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n    const response = await api.get('/api/users/me/');\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error('GetMe API error:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw error;\n  }\n};\nexport const register = async userData => {\n  try {\n    console.log('Sending registration request with data:', userData);\n    const response = await api.post('/api/users/register/', userData);\n    console.log('Registration API response:', response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response5;\n    console.error('Registration API error:', {\n      status: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status,\n      data: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data,\n      message: error.message\n    });\n    throw error;\n  }\n};\n\n// Password reset functions\nexport const forgotPassword = async email => {\n  try {\n    const response = await api.post('/api/users/password-reset/', {\n      email\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response6;\n    console.error('Password reset error:', ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || error.message);\n    throw error;\n  }\n};\nexport const resetPassword = async (token, password) => {\n  try {\n    const response = await api.post('/api/users/password-reset/confirm/', {\n      token,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response7;\n    console.error('Password reset confirm error:', ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n    throw error;\n  }\n};\n\n// Request interceptor for adding auth token and handling requests\napi.interceptors.request.use(config => {\n  // Ensure headers are properly set for each request\n  config.headers = {\n    ...config.headers,\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  };\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  console.log('Request config:', {\n    url: config.url,\n    method: config.method,\n    headers: config.headers,\n    data: config.data\n  });\n  return config;\n}, error => {\n  console.error('Request interceptor error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for handling common responses and errors\napi.interceptors.response.use(response => response, async error => {\n  var _error$response8;\n  if (((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.status) === 401) {\n    // Handle unauthorized access\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  } else if (!error.response && error.message === 'Network Error') {\n    // Handle network errors\n    console.error('Network error - please check your connection');\n  } else {\n    var _error$response9;\n    // Log other errors\n    console.error('API Error:', ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : _error$response9.data) || error.message);\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","withCredentials","timeout","login","username","password","_response$data","console","log","response","post","data","status","access_token","user","localStorage","setItem","defaults","common","error","_error$response","_error$response2","message","getMe","token","getItem","Error","get","_error$response3","register","userData","_error$response4","_error$response5","forgotPassword","email","_error$response6","resetPassword","_error$response7","interceptors","request","use","config","Authorization","url","method","Promise","reject","_error$response8","removeItem","window","location","href","_error$response9"],"sources":["/home/grythman/ims-proj/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with default config\nconst api = axios.create({\n    baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n    headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n    },\n    withCredentials: true,\n    timeout: 10000, // 10 second timeout\n});\n\n// Auth related API calls\nexport const login = async (username, password) => {\n    try {\n        console.log('Sending login request with data:', { username, password });\n        const response = await api.post('/api/users/login/', \n            { username, password },\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            }\n        );\n        \n        console.log('Login API response:', response.data);\n        \n        if (response.data?.status === 'success') {\n            const { access_token, user } = response.data.data;\n            // Store the token\n            localStorage.setItem('token', access_token);\n            // Update axios default headers\n            api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n        }\n        \n        return response.data;\n    } catch (error) {\n        console.error('Login API error:', {\n            status: error.response?.status,\n            data: error.response?.data,\n            message: error.message\n        });\n        throw error;\n    }\n};\n\nexport const getMe = async () => {\n    try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            throw new Error('No authentication token found');\n        }\n\n        const response = await api.get('/api/users/me/');\n        return response.data;\n    } catch (error) {\n        console.error('GetMe API error:', error.response?.data || error.message);\n        throw error;\n    }\n};\n\nexport const register = async (userData) => {\n    try {\n        console.log('Sending registration request with data:', userData);\n        const response = await api.post('/api/users/register/', userData);\n        console.log('Registration API response:', response.data);\n        return response.data;\n    } catch (error) {\n        console.error('Registration API error:', {\n            status: error.response?.status,\n            data: error.response?.data,\n            message: error.message\n        });\n        throw error;\n    }\n};\n\n// Password reset functions\nexport const forgotPassword = async (email) => {\n    try {\n        const response = await api.post('/api/users/password-reset/', { email });\n        return response.data;\n    } catch (error) {\n        console.error('Password reset error:', error.response?.data || error.message);\n        throw error;\n    }\n};\n\nexport const resetPassword = async (token, password) => {\n    try {\n        const response = await api.post('/api/users/password-reset/confirm/', {\n            token,\n            password\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Password reset confirm error:', error.response?.data || error.message);\n        throw error;\n    }\n};\n\n// Request interceptor for adding auth token and handling requests\napi.interceptors.request.use(\n    (config) => {\n        // Ensure headers are properly set for each request\n        config.headers = {\n            ...config.headers,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        };\n        \n        const token = localStorage.getItem('token');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        \n        console.log('Request config:', {\n            url: config.url,\n            method: config.method,\n            headers: config.headers,\n            data: config.data\n        });\n        \n        return config;\n    },\n    (error) => {\n        console.error('Request interceptor error:', error);\n        return Promise.reject(error);\n    }\n);\n\n// Response interceptor for handling common responses and errors\napi.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n        if (error.response?.status === 401) {\n            // Handle unauthorized access\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            window.location.href = '/login';\n        } else if (!error.response && error.message === 'Network Error') {\n            // Handle network errors\n            console.error('Network error - please check your connection');\n        } else {\n            // Log other errors\n            console.error('API Error:', error.response?.data || error.message);\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}